<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="A simple demo project using ASP.NET Core Razor Pages" xml:space="preserve">
    <value>Un simplu proiect demo utilizând ASP.NET Core Razor Pages</value>
  </data>
  <data name="About Us" xml:space="preserve">
    <value>Despre Noi</value>
  </data>
  <data name="Add" xml:space="preserve">
    <value>Adaugă</value>
  </data>
  <data name="Already have an account?" xml:space="preserve">
    <value>Ai deja un cont?</value>
  </data>
  <data name="Brand" xml:space="preserve">
    <value>Firmă</value>
  </data>
  <data name="Captcha verification failed." xml:space="preserve">
    <value>Verificarea Captcha a eșuat.</value>
  </data>
  <data name="Captcha verification is required." xml:space="preserve">
    <value>Verificarea Captcha este necesară.</value>
  </data>
  <data name="Category" xml:space="preserve">
    <value>Categorie</value>
  </data>
  <data name="Company" xml:space="preserve">
    <value>Companie</value>
  </data>
  <data name="Confirm Password" xml:space="preserve">
    <value>Confirmă Parolă</value>
  </data>
  <data name="Delete" xml:space="preserve">
    <value>Șterge</value>
  </data>
  <data name="Email" xml:space="preserve">
    <value>Email</value>
  </data>
  <data name="Features" xml:space="preserve">
    <value>Caracteristici</value>
  </data>
  <data name="Forgot your password?" xml:space="preserve">
    <value>Ai uitat parola?</value>
  </data>
  <data name="Here you can do some CRUD operations" xml:space="preserve">
    <value>Aici puteți face niște operații CRUD</value>
  </data>
  <data name="Here you can read how we are protecting your data" xml:space="preserve">
    <value>Aici poți citi despre cum îți protejăm datele tale</value>
  </data>
  <data name="Home" xml:space="preserve">
    <value>Acasă</value>
  </data>
  <data name="Login" xml:space="preserve">
    <value>Autentificare</value>
  </data>
  <data name="Logout" xml:space="preserve">
    <value>Delogare</value>
  </data>
  <data name="Name" xml:space="preserve">
    <value>Nume</value>
  </data>
  <data name="or" xml:space="preserve">
    <value>sau</value>
  </data>
  <data name="Password" xml:space="preserve">
    <value>Parolă</value>
  </data>
  <data name="Please sign in." xml:space="preserve">
    <value>Te rugăm să te autentifici.</value>
  </data>
  <data name="Price" xml:space="preserve">
    <value>Preț</value>
  </data>
  <data name="Privacy" xml:space="preserve">
    <value>Confidențialitate</value>
  </data>
  <data name="Privacy Policy" xml:space="preserve">
    <value>Politică de Confidențialitate</value>
  </data>
  <data name="Product Name" xml:space="preserve">
    <value>Nume Produs</value>
  </data>
  <data name="Products" xml:space="preserve">
    <value>Produse</value>
  </data>
  <data name="Register" xml:space="preserve">
    <value>Înregistrare</value>
  </data>
  <data name="Register as a new user" xml:space="preserve">
    <value>Înregistrează-te ca utilizator nou</value>
  </data>
  <data name="Register with" xml:space="preserve">
    <value>Înregistrează-te cu</value>
  </data>
  <data name="Remember me" xml:space="preserve">
    <value>Reține-mă</value>
  </data>
  <data name="Resend email confirmation" xml:space="preserve">
    <value>Retrimite email de confirmare</value>
  </data>
  <data name="Sign In" xml:space="preserve">
    <value>Autentificare</value>
  </data>
  <data name="Sign Up" xml:space="preserve">
    <value>Înregistrare</value>
  </data>
  <data name="The {0} field is required." xml:space="preserve">
    <value>Câmpul {0} este necesar.</value>
  </data>
  <data name="This is a localized message from page model." xml:space="preserve">
    <value>Acesta e un mesaj din modelul paginii.</value>
  </data>
  <data name="This is a localized message from view." xml:space="preserve">
    <value>Acesta e un mesaj din view.</value>
  </data>
  <data name="This is a very fancy Privacy Policy." xml:space="preserve">
    <value>Aceasta este o Politică de Confidențialitate.</value>
  </data>
  <data name="Welcome back" xml:space="preserve">
    <value>Bine ai revenit</value>
  </data>
  <data name="Welcome!" xml:space="preserve">
    <value>Bine ați venit!</value>
  </data>
  <data name="You can sign up with your email address or via an external provider" xml:space="preserve">
    <value>Poți să te înregistrezi cu adresa ta de email sau cu un furnizor extern</value>
  </data>
</root>