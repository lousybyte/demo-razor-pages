{
    "AllowedHosts": "*",
    "IpRateLimiting": {
        "EnableEndpointRateLimiting": true,
        "StackBlockedRequests": false,
        "DisableRateLimitHeaders": true,
        "RealIpHeader": "X-Real-IP",
        "ClientIdHeader": "X-ClientId",
        "HttpStatusCode": 429,
        "QuotaExceededResponse": {
            "Content": "<h1>Too many requests.</h1>",
            "ContentType": "text/html",
            "StatusCode": 429
        },
        "IpWhitelist": [],
        "EndpointWhitelist": [
            "get:/js/",
            "get:/css/",
            "get:/images/",
            "get:/lib/",
            "get:/fonts/"
        ],
        "ClientWhitelist": [],
        "GeneralRules": [
            {
                "Endpoint": "*",
                "Period": "1s",
                "Limit": 5
            },
            {
                "Endpoint": "*",
                "Period": "5s",
                "Limit": 20
            },
            {
                "Endpoint": "*",
                "Period": "1m",
                "Limit": 60
            },
            {
                "Endpoint": "*",
                "Period": "1h",
                "Limit": 1000
            }
        ]
    },
    "IpRateLimitPolicies": {
        "IpRules": [
            {
                "Ip": "1.1.1.1",
                "Rules": [
                    {
                        "Endpoint": "*",
                        "Period": "1s",
                        "Limit": 1
                    }
                ]
            }
        ]
    },
    "ClientRateLimiting": {
        "EnableEndpointRateLimiting": true,
        "StackBlockedRequests": false,
        "DisableRateLimitHeaders": true,
        "ClientIdHeader": "X-ClientId",
        "HttpStatusCode": 429,
        "QuotaExceededResponse": {
            "Content": "<h1>Too many requests.</h1>",
            "ContentType": "text/html",
            "StatusCode": 429
        },
        "EndpointWhitelist": [
            "get:/js/",
            "get:/css/",
            "get:/images/",
            "get:/lib/",
            "get:/fonts/"
        ],
        "ClientWhitelist": [
            ""
        ],
        "GeneralRules": [
            {
                "Endpoint": "*",
                "Period": "1s",
                "Limit": 5
            },
            {
                "Endpoint": "*",
                "Period": "5s",
                "Limit": 20
            },
            {
                "Endpoint": "*",
                "Period": "1m",
                "Limit": 60
            },
            {
                "Endpoint": "*",
                "Period": "1h",
                "Limit": 1000
            }
        ]
    },
    "ClientRateLimitPolicies": {
        "ClientRules": [
            {
                "ClientId": "example-client-id-1",
                "Rules": [
                    {
                        "Endpoint": "*",
                        "Period": "1s",
                        "Limit": 1
                    }
                ]
            }
        ]
    },
    "Serilog": {
        "Using": [],
        "MinimumLevel": {
            "Default": "Information",
            "Override": {
                "Microsoft": "Warning",
                "System": "Warning"
            }
        },
        "WriteTo": [
            {
                "Name": "Console"
            },
            {
                "Name": "Logger",
                "Args": {
                    "configureLogger": {
                        "Filter": [
                            {
                                "Name": "ByExcluding",
                                "Args": {
                                    "expression": "Contains(SourceContext, 'Microsoft')"
                                }
                            }
                        ],
                        "WriteTo": [
                            {
                                "Name": "File",
                                "Args": {
                                    "path": "Logs/application_.log",
                                    "rollingInterval": "Day",
                                    "retainedFileCountLimit": 365,
                                    "formatter": "Serilog.Formatting.Json.JsonFormatter, Serilog"
                                }
                            }
                        ]
                    }
                }
            },
            {
                "Name": "Logger",
                "Args": {
                    "configureLogger": {
                        "Filter": [
                            {
                                "Name": "ByIncludingOnly",
                                "Args": {
                                    "expression": "Contains(SourceContext, 'Microsoft.EntityFrameworkCore')"
                                }
                            }
                        ],
                        "WriteTo": [
                            {
                                "Name": "File",
                                "Args": {
                                    "path": "Logs/database_.log",
                                    "rollingInterval": "Day",
                                    "retainedFileCountLimit": 365,
                                    "formatter": "Serilog.Formatting.Json.JsonFormatter, Serilog"
                                }
                            }
                        ]
                    }
                }
            },
            {
                "Name": "Logger",
                "Args": {
                    "configureLogger": {
                        "Filter": [
                            {
                                "Name": "ByIncludingOnly",
                                "Args": {
                                    "expression": "Contains(SourceContext, 'Microsoft.')"
                                }
                            }
                        ],
                        "WriteTo": [
                            {
                                "Name": "File",
                                "Args": {
                                    "path": "Logs/system_.log",
                                    "rollingInterval": "Day",
                                    "retainedFileCountLimit": 365,
                                    "formatter": "Serilog.Formatting.Json.JsonFormatter, Serilog"
                                }
                            }
                        ]
                    }
                }
            }
        ],
        "Enrich": [
            "FromLogContext",
            "WithMachineName",
            "WithProcessId",
            "WithThreadId"
        ],
        "Properties": {
            "ApplicationName": "DemoRazor"
        }
    },
    "ConnectionStrings": {
        "ApplicationDb": ""
    },
    "Quartz": {
        "quartz.scheduler.instanceName": "Quartz ASP.NET Core Scheduler"
    },
    "Cookie": {
        "Auth": {
            "Name": "AOreo",
            "MaxAge": 1
        },
        "Localization": {
            "Name": "LOreo"
        },
        "XSRF": {
            "Name": "XOreo"
        }
    },
    "Email": {
        "FromAddress": "",
        "FromName": "",
        "ToAddress": "",
        "ToName": "USERNAME",
        "Sendgrid": {
            "ApiKey": ""
        }
    },
    "Auth": {
        "Google": {
            "ClientId": "",
            "ClientSecret": ""
        }
    },
    "Captcha": {
        "Google": {
            "ClientKey": "",
            "ServerKey": ""
        }
    }
}